apiVersion: apps/v1
kind: Deployment
metadata:
  name: platformbucketsapi
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      service: platformbucketsapi
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: platformbucketsapi
      annotations:
        {{- with .Values.annotations }}
        {{ toYaml . | indent 8 }}
        {{- end }}
    spec:
      containers:
      - name: platformbucketsapi

        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}

        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /api/v1/ping
            port: tcp-web
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /api/v1/ping
            port: tcp-web
          initialDelaySeconds: 10
          periodSeconds: 10
        ports:
          - containerPort: {{ .Values.port }}
            name: tcp-web
            protocol: TCP
        {{- if .Values.resources }}
        resources: {{ toYaml .Values.resources | nindent 10 }}
        {{- end }}

        env:
        - name: NP_BUCKETS_API_PORT
          value: {{ .Values.port | quote }}
        - name: NP_BUCKETS_API_PLATFORM_AUTH_URL
          value: {{ .Values.authUrl }}
        - name: NP_BUCKETS_API_PLATFORM_AUTH_TOKEN

{{- if .Values.platform.token }}
{{ toYaml .Values.platform.token | indent 10 }}
{{- end }}

        - name: NP_BUCKETS_API_K8S_API_URL
          value: https://kubernetes.default:443
        - name: NP_BUCKETS_API_K8S_AUTH_TYPE
          value: token
        - name: NP_BUCKETS_API_K8S_CA_PATH
          value: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - name: NP_BUCKETS_API_K8S_TOKEN_PATH
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: NP_BUCKETS_API_K8S_NS
          value: {{ .Values.NP_BUCKETS_API_K8S_NS}}
        - name: NP_CLUSTER_NAME
          value: {{ .Values.platform.clusterName}}
        - name: NP_CORS_ORIGINS
          value: {{ .Values.corsOrigins }}
        - name: NP_BUCKET_PROVIDER_TYPE
          value: {{ .Values.bucketProvider.type }}
        # AWS S3 provider
        {{- if eq .Values.bucketProvider.type "aws" }}
        - name: NP_AWS_S3_ROLE_ARN
          value: {{ .Values.bucketProvider.aws.s3RoleArn }}
{{- if .Values.bucketProvider.aws.accessKeyId }}
        - name: NP_AWS_ACCESS_KEY_ID
{{ toYaml .Values.bucketProvider.aws.accessKeyId | indent 10 }}
{{- end }}
{{- if .Values.bucketProvider.aws.secretAccessKey }}
        - name: NP_AWS_SECRET_ACCESS_KEY
{{ toYaml .Values.bucketProvider.aws.secretAccessKey | indent 10 }}
{{- end }}
{{- if .Values.bucketProvider.aws.regionName }}
        - name: NP_AWS_REGION_NAME
          value: {{ .Values.bucketProvider.aws.regionName }}
{{- end}}
        {{- end }}
        # Minio provider
        {{- if eq .Values.bucketProvider.type "minio" }}
        - name: NP_MINIO_ENDPOINT_URL
          value: {{ .Values.bucketProvider.minio.url }}
        - name: NP_MINIO_ENDPOINT_PUBLIC_URL
          value: {{ .Values.bucketProvider.minio.publicUrl }}
        - name: NP_MINIO_ACCESS_KEY_ID
          value: {{ .Values.bucketProvider.minio.accessKeyId }}
        - name: NP_MINIO_SECRET_ACCESS_KEY
          value: {{ .Values.bucketProvider.minio.secretAccessKey }}
        - name: NP_MINIO_REGION_NAME
          value: {{ .Values.bucketProvider.minio.regionName }}
        {{- end }}
        {{- if eq .Values.bucketProvider.type "azure" }}
        - name: NP_AZURE_STORAGE_ACCOUNT_URL
          value: {{ .Values.bucketProvider.azure.url }}
        - name: NP_AZURE_STORAGE_CREDENTIAL
{{ toYaml .Values.bucketProvider.azure.credential | indent 10 }}
        {{- end }}
        {{- if eq .Values.bucketProvider.type "gcp" }}
        - name: NP_GCP_SERVICE_ACCOUNT_KEY_JSON_B64
{{ toYaml .Values.bucketProvider.gcp.SAKeyJsonB64 | indent 10 }}
        {{- end }}
        {{- if .Values.zipkin }}
        - name: NP_ZIPKIN_URL
          value: {{ .Values.zipkin.url }}
        - name: NP_ZIPKIN_SAMPLE_RATE
          value: {{ .Values.zipkin.sampleRate | default 0 | quote }}
        {{- end }}
        {{- if .Values.sentry }}
        - name: NP_SENTRY_DSN
          value: {{ .Values.sentry.dsn }}
        - name: NP_SENTRY_CLUSTER_NAME
          value: {{ .Values.sentry.clusterName }}
        - name: NP_SENTRY_SAMPLE_RATE
          value: {{ .Values.sentry.sampleRate | default 0 | quote }}
        {{- end }}
        {{- if .Values.enableDocs }}
        - name: NP_BUCKETS_API_ENABLE_DOCS
          value: "true"
        {{- end }}

      {{- if .Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml .Values.imagePullSecrets | nindent 6 }}
      {{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: platformbucketsapi
  annotations:
    traefik.ingress.kubernetes.io/affinity: "true"
    traefik.ingress.kubernetes.io/session-cookie-name: NEURO_BUCKETS_API_SESSION
spec:
  type: ClusterIP
  ports:
  - name: http
    port: {{ .Values.port }}
    targetPort: tcp-web
  selector:
    service: platformbucketsapi
