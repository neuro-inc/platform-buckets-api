bucketProvider: {}
#  type: "aws"  # "aws" or "minio" or "azure" or "gcp" or "emc_ecs" or "open_stack"
#  aws:
#    s3RoleArn:
#    accessKeyId:
#    secretAccessKey:
#    regionName:
#    endpointUrl:
#  minio:
#    url:
#    publicUrl:
#    accessKeyId:
#    secretAccessKey:
#    regionName:
#  azure:
#    url:
#    credential:
#  gcp:
#    SAKeyJsonB64:
#  emc_ecs:
#    s3RoleUrn:
#    accessKeyId:
#    secretAccessKey:
#    s3EndpointUrl:
#    managementEndpointUrl:
#  open_stack:
#    accountId:
#    password:
#    endpointUrl:
#    s3EndpointUrl:
#    regionName:

image:
  repository: $IMAGE_REPO
  tag: $IMAGE_TAG
imagePullSecrets: []

port: 8080

replicas: 2
resources:
  requests:
    cpu: "0.1"
    memory: 300Mi
  limits:
    cpu: "0.2"
    memory: 600Mi

ingress:
  enabled: false
  ingressClassName: ""
  hosts: []
  annotations: {}

service:
  annotations: {}

secrets: []

zipkin: {}

sentry: {}

annotations: {}

platform:
  clusterName: ""
  authUrl: http://platform-auth:8080
  token: {}

bucketNamespace: default

cors:
  origins: []

enableDocs: false
disableCreation: false

priorityClassName: ""
