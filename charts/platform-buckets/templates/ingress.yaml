
{{- if .Values.ingress.enabled }}
{{- $ingressApiIsStable := eq (include "k8s.ingress.isStable" .) "true" -}}
apiVersion: {{ include "k8s.ingress.apiVersion" . }}
kind: Ingress
metadata:
  name: {{ include "platformBuckets.fullname" . }}
  labels: {{ include "platformBuckets.labels.standard" . | nindent 4 }}
    service: platform-buckets
  annotations:
    {{- if and (not $ingressApiIsStable) .Values.ingress.ingressClassName }}
    kubernetes.io/ingress.class: {{ .Values.ingress.ingressClassName }}
    {{- end }}
{{- with .Values.ingress.annotations }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  {{- if and $ingressApiIsStable .Values.ingress.ingressClassName }}
  ingressClassName: {{ .Values.ingress.ingressClassName }}
  {{- end }}
  rules:
  {{- range .Values.ingress.hosts }}
  - host: {{ . | quote }}
    http:
      paths:
      - path: /api/v1/buckets
        {{- if $ingressApiIsStable }}
        pathType: Prefix
        {{- end }}
        backend:
          {{- if $ingressApiIsStable }}
          service:
            name: {{ include "platformBuckets.fullname" $ }}
            port:
              name: http
          {{- else }}
          serviceName: {{ include "platformBuckets.fullname" $ }}
          servicePort: http
          {{- end }}
      - path: /api/docs/v1/buckets
        {{- if $ingressApiIsStable }}
        pathType: Prefix
        {{- end }}
        backend:
          {{- if $ingressApiIsStable }}
          service:
            name: {{ include "platformBuckets.fullname" $ }}
            port:
              name: http
          {{- else }}
          serviceName: {{ include "platformBuckets.fullname" $ }}
          servicePort: http
          {{- end }}
  {{- end }}
{{- end }}
