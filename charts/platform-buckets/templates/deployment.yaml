apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "platformBuckets.fullname" . }}
  labels: {{ include "platformBuckets.labels.standard" . | nindent 4 }}
    service: platform-buckets
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ include "platformBuckets.name" . }}
      release: {{ .Release.Name }}
      service: platform-buckets
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ include "platformBuckets.name" . }}
        release: {{ .Release.Name }}
        service: platform-buckets
      {{- with .Values.annotations }}
      annotations: {{ toYaml . | nindent 8 }}
      {{- end }}
    spec:
      containers:
      - name: platform-buckets
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /api/v1/ping
            port: tcp-web
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /api/v1/ping
            port: tcp-web
          initialDelaySeconds: 10
          periodSeconds: 10
        ports:
          - containerPort: {{ .Values.port }}
            name: tcp-web
            protocol: TCP
        {{- if .Values.resources }}
        resources: {{ toYaml .Values.resources | nindent 10 }}
        {{- end }}
        env:
        - name: NP_BUCKETS_API_PORT
          value: {{ .Values.port | quote }}
        - name: NP_BUCKETS_API_PLATFORM_AUTH_URL
          value: {{ .Values.platform.authUrl | quote }}
        - name: NP_BUCKETS_API_PLATFORM_AUTH_TOKEN
{{- if .Values.platform.token }}
{{ toYaml .Values.platform.token | indent 10 }}
{{- end }}
        - name: NP_BUCKETS_API_K8S_API_URL
          value: https://kubernetes.default:443
        - name: NP_BUCKETS_API_K8S_AUTH_TYPE
          value: token
        - name: NP_BUCKETS_API_K8S_CA_PATH
          value: {{ include "platformBuckets.kubeAuthMountRoot" . }}/ca.crt
        - name: NP_BUCKETS_API_K8S_TOKEN_PATH
          value: {{ include "platformBuckets.kubeAuthMountRoot" . }}/token
        - name: NP_BUCKETS_API_K8S_NS
          value: {{ .Values.bucketNamespace }}
        - name: NP_CLUSTER_NAME
          value: {{ .Values.platform.clusterName}}
        - name: NP_BUCKET_PROVIDER_TYPE
          value: {{ .Values.bucketProvider.type }}
        # AWS S3 provider
        {{- if eq .Values.bucketProvider.type "aws" }}
        - name: NP_AWS_S3_ROLE_ARN
          value: {{ .Values.bucketProvider.aws.s3RoleArn }}
{{- if .Values.bucketProvider.aws.accessKeyId }}
        - name: NP_AWS_ACCESS_KEY_ID
{{ toYaml .Values.bucketProvider.aws.accessKeyId | indent 10 }}
{{- end }}
{{- if .Values.bucketProvider.aws.secretAccessKey }}
        - name: NP_AWS_SECRET_ACCESS_KEY
{{ toYaml .Values.bucketProvider.aws.secretAccessKey | indent 10 }}
{{- end }}
{{- if .Values.bucketProvider.aws.regionName }}
        - name: NP_AWS_REGION_NAME
          value: {{ .Values.bucketProvider.aws.regionName }}
{{- end}}
{{- if .Values.bucketProvider.aws.endpointUrl }}
        - name: NP_AWS_ENDPOINT_URL
          value: {{ .Values.bucketProvider.aws.endpointUrl }}
{{- end}}
        {{- end }}
        # Minio provider
        {{- if eq .Values.bucketProvider.type "minio" }}
        - name: NP_MINIO_ENDPOINT_URL
          value: {{ .Values.bucketProvider.minio.url }}
        - name: NP_MINIO_ENDPOINT_PUBLIC_URL
          value: {{ .Values.bucketProvider.minio.publicUrl }}
        - name: NP_MINIO_ACCESS_KEY_ID
          value: {{ .Values.bucketProvider.minio.accessKeyId }}
        - name: NP_MINIO_SECRET_ACCESS_KEY
          value: {{ .Values.bucketProvider.minio.secretAccessKey }}
        - name: NP_MINIO_REGION_NAME
          value: {{ .Values.bucketProvider.minio.regionName }}
        {{- end }}
        # Azure provider
        {{- if eq .Values.bucketProvider.type "azure" }}
        - name: NP_AZURE_STORAGE_ACCOUNT_URL
          value: {{ .Values.bucketProvider.azure.url }}
        - name: NP_AZURE_STORAGE_CREDENTIAL
{{ toYaml .Values.bucketProvider.azure.credential | indent 10 }}
        {{- end }}
        # GCP provider
        {{- if eq .Values.bucketProvider.type "gcp" }}
        - name: NP_GCP_SERVICE_ACCOUNT_KEY_JSON_B64
{{ toYaml .Values.bucketProvider.gcp.SAKeyJsonB64 | indent 10 }}
        {{- end }}
        # EMC ECS provider
        {{- if eq .Values.bucketProvider.type "emc_ecs" }}
        - name: NP_EMC_ECS_S3_ROLE_URN
          value: {{ .Values.bucketProvider.emc_ecs.s3RoleUrn }}
        - name: NP_EMC_ECS_ACCESS_KEY_ID
{{ toYaml .Values.bucketProvider.emc_ecs.accessKeyId | indent 10 }}
        - name: NP_EMC_ECS_SECRET_ACCESS_KEY
{{ toYaml .Values.bucketProvider.emc_ecs.secretAccessKey | indent 10 }}
        - name: NP_EMC_ECS_S3_ENDPOINT_URL
          value: {{ .Values.bucketProvider.emc_ecs.s3EndpointUrl }}
        - name: NP_EMC_ECS_MANAGEMENT_ENDPOINT_URL
          value: {{ .Values.bucketProvider.emc_ecs.managementEndpointUrl }}
        {{- end }}
        # Open Stack provider
        {{- if eq .Values.bucketProvider.type "open_stack" }}
        - name: NP_OS_ACCOUNT_ID
{{ toYaml .Values.bucketProvider.open_stack.accountId | indent 10 }}
        - name: NP_OS_PASSWORD
{{ toYaml .Values.bucketProvider.open_stack.password | indent 10 }}
        - name: NP_OS_ENDPOINT_URL
          value: {{ .Values.bucketProvider.open_stack.endpointUrl }}
        - name: NP_OS_S3_ENDPOINT_URL
          value: {{ .Values.bucketProvider.open_stack.s3EndpointUrl }}
        - name: NP_OS_REGION_NAME
          value: {{ .Values.bucketProvider.open_stack.regionName }}
        {{- end }}
        # End of providers
        {{- if .Values.sentry }}
        - name: SENTRY_DSN
          value: {{ .Values.sentry.dsn }}
        - name: SENTRY_CLUSTER_NAME
          value: {{ .Values.sentry.clusterName }}
        - name: SENTRY_APP_NAME
          value: platform-buckets-api
        - name: SENTRY_SAMPLE_RATE
          value: {{ .Values.sentry.sampleRate | default 0 | quote }}
        {{- end }}
        {{- if .Values.enableDocs }}
        - name: NP_BUCKETS_API_ENABLE_DOCS
          value: "true"
        {{- end }}
        {{- if .Values.disableCreation }}
        - name: NP_BUCKETS_API_DISABLE_CREATION
          value: "true"
        {{- end }}
        volumeMounts:
        - mountPath: {{ include "platformBuckets.kubeAuthMountRoot" . }}
          name: kube-api-token
          readOnly: true

      {{- if .Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml .Values.imagePullSecrets | nindent 6 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      volumes:
      - name: kube-api-token
        projected:
          sources:
          - serviceAccountToken:
              expirationSeconds: 3600
              path: token
          - configMap:
              name: kube-root-ca.crt
              items:
              - key: ca.crt
                path: ca.crt
