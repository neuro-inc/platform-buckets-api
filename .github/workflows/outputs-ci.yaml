name: Output Server CI

on:
  push:
    branches: [master]
    tags: ["v*"]
  pull_request:
    branches: [master]

jobs:
  test:
    name: All checks are passed
    uses: ./.github/workflows/outputs-test.yaml
    secrets: inherit

  release:
    name: Release image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master')
    steps:
      - name: Checkout commit
        uses: actions/checkout@v4
      - name: Purge old artifacts
        uses: kolpav/purge-artifacts-action@v1
        with:
          token: ${{ github.token }}
          expire-in: 30mins
      - name: Login to ghcr.io
        uses: docker/login-action@v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Release development image
        working-directory: buckets-output-server
        run: |
          make build
      - name: Release development image
        working-directory: buckets-output-server
        run: |
          export TAG=development
          make push
  release-pr:
    name: Release image from PR
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout commit
        uses: actions/checkout@v4
      - name: Purge old artifacts
        uses: kolpav/purge-artifacts-action@v1
        with:
          token: ${{ github.token }}
          expire-in: 30mins
      - name: Login to ghcr.io
        uses: docker/login-action@v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/neuro-inc/outputs-proxy
          tags: |
            type=ref,event=pr
      - name: Build Docker image
        working-directory: buckets-output-server
        run: make build
      - name: Push release for testing
        working-directory: buckets-output-server
        run: |
          FULL_IMAGE_NAME=${{ steps.meta.outputs.tags }}
          export TAG=${FULL_IMAGE_NAME##*:}
          make push
